section
  
  section
    h1 What is GitHub?
    p A place where a community can organize around code - or any text. Community members can make contributions to the codebase, discuss issues, organize knowledge, and make their own copies to build off independently.
    
  section
    h2 What does this look like?
    p 
      ' From the 
      a(href='https://github.com/martinaglv/jQuery-FullScreen/network') jQuery FullScreen library
    img(src='https://www.dropbox.com/s/ip105cjjohvbjj3/Screenshot%202014-11-11%2014.09.39.png?dl=1')
    
  section
    h2 
      ' How do people 
      a(href='https://github.com/rails/rails/pull/8563') resolve conflicts
      | ?
    img(src='https://www.dropbox.com/s/7ahxxvnsib9oecn/Screenshot%202014-11-11%2014.25.00.png?dl=1')
  
section
  
  section
    hgroup
      h1 How does open source make sense?
      h2 Isn't my code my whole business?
      
  section
    h2 #1: Give away code, sell support
    p Oracle and Redhat both follow this model.
    
  section
    h2 #2: Give away code, sell the platform
    p This one is slightly different and is the business model behind WordPress. You can host it yourself - or you can pay to have it hosted for you at WordPress.com (or get it for free with ads).
    
  section
    h2 #3: Give away code that's not central to your business
    p This isn't just being nice. It's being lazy in a smart way. If other people use your software, they'll help improve and maintain it.
    p 
      ' Thoughtbot is a software consultancy with a 
      a(href='https://github.com/thoughtbot') <em>ton</em> of open source projects
      | . They give these away because they're not a "Rails file upload management company" or a "SASS mixin library company" - these are just tools they use to make their real products. By sharing their tools with the world, they get free work and free advertising.
      
section
  
  section
    hgroup
      h1 Why Git?
      h2 Why is all this open-source community goodness organized around Git?
      
  section
    p 
      ' There are 
      a(href='http://thkoch2001.github.io/whygitisbetter/') a lot of reasons to use Git
      | , but the short version is it:
    ol
      li Makes collaboration very easy
      li Is adaptable to any kind of work flow
      li Probably boasts the most big, open source projects - and is <em>overwhelmingly</em> favored in the Ruby world.
      
  section
    h2 How does Git work?
    h3 
      | (How do I learn to use it?)
    p
      ' I have a little demo we can do with Tinker Toys that I stole from a 
      a(href='https://www.youtube.com/watch?v=1ffBJ4sVUb4') talk at Linux.conf.au
      | . I also recommend the following resources, to be consumed by beginners in this order:
    ol
      li
        a(href='https://try.github.io/levels/1/challenges/1') tryGit
        | : hand-holding introduction to Git made by Codeschool
      li
        a(href='https://www.atlassian.com/git/tutorials/') Git Tutorials
        | : complete walkthrough of all the basics, from setting up a repository to all the everyday Git commands
      li
        a(href='http://onlywei.github.io/explain-git-with-d3/') Visualizing Git Concepts with D3
        | : great, interactive playground where you can see a visual representation of exactly what goes on under the hood
      li
        a(href='http://git-scm.com/book/en/v2') Pro Git
        | : great reference for any Git and even many GitHub questions you may have
        
  section
    h2 And finally two more fun resources!
    ul
      li
        a(href='http://hashrocket.com/blog/posts/x-men-days-of-future-past-explained-in-git') X-Men Days of Future Past, Explained in Git
      li
        a(href='http://hashrocket.com/blog/posts/edge-of-tomorrow-explained-in-git') Edge of Tomorrow, Explained in Git
      li
        a(href='https://github.com/hyrmn/dotfiles/blob/master/.gitconfig') git yolo (near the bottom of the file) :-)
